@startuml
title Dynamic Partition Commander : Create Session

participant DynamicPartitionObserverListener
participant DynamicPartitionCommander
control Failsafe
participant DynamicPartitionCommanderProvider
participant RoutingServiceCommandInterface

DynamicPartitionObserverListener -> DynamicPartitionCommander: createSession()\ndeleteSession()\ncreateTopicRoute()\ndeleteTopicRoute()
activate DynamicPartitionCommander
  alt scheduledCommands.remove() != null
    DynamicPartitionCommander -> DynamicPartitionCommander: scheduledCommands.remove().getKey().cancel()
  end
  DynamicPartitionCommander -> Failsafe: Failsafe\n.onSuccess(scheduledCommands.remove())\n.get(sendRequest())
  DynamicPartitionCommander --> DynamicPartitionObserverListener: done
deactivate DynamicPartitionCommander

== Create Session ==

[-> Failsafe: run()
activate Failsafe
  Failsafe -> RoutingServiceCommandInterface: createCommandRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandRequest
  deactivate RoutingServiceCommandInterface

  Failsafe -> DynamicPartitionCommanderProvider: getSessionParent()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: sessionParent
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> DynamicPartitionCommanderProvider: getSessionConfiguration()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: sessionConfiguration
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> RoutingServiceCommandInterface: sendRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandResponse
  deactivate RoutingServiceCommandInterface

  [<-- Failsafe: done
deactivate Failsafe

== Delete Session ==

[-> Failsafe: run()
activate Failsafe
  Failsafe -> RoutingServiceCommandInterface: createCommandRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandRequest
  deactivate RoutingServiceCommandInterface

  Failsafe -> DynamicPartitionCommanderProvider: getSessionEntityName()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: sessionEntityName
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> RoutingServiceCommandInterface: sendRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandResponse
  deactivate RoutingServiceCommandInterface

  [<-- Failsafe: done
deactivate Failsafe

== Create Topic Route ==

[-> Failsafe: run()
activate Failsafe
  Failsafe -> RoutingServiceCommandInterface: createCommandRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandRequest
  deactivate RoutingServiceCommandInterface

  Failsafe -> DynamicPartitionCommanderProvider: getSessionEntityName()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: sessionEntityName
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> DynamicPartitionCommanderProvider: getTopicRouteConfiguration()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: topicRouteConfiguration
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> RoutingServiceCommandInterface: sendRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandResponse
  deactivate RoutingServiceCommandInterface

  [<-- Failsafe: done
deactivate Failsafe

== Delete Topic Route ==

[-> Failsafe: run()
activate Failsafe
  Failsafe -> RoutingServiceCommandInterface: createCommandRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandRequest
  deactivate RoutingServiceCommandInterface

  Failsafe -> DynamicPartitionCommanderProvider: getTopicRouteEntityName()
  activate DynamicPartitionCommanderProvider
    DynamicPartitionCommanderProvider --> Failsafe: topicRouteEntityName
  deactivate DynamicPartitionCommanderProvider

  Failsafe -> RoutingServiceCommandInterface: sendRequest()
  activate RoutingServiceCommandInterface
    RoutingServiceCommandInterface --> Failsafe: commandResponse
  deactivate RoutingServiceCommandInterface

  [<-- Failsafe: done
deactivate Failsafe

@enduml
